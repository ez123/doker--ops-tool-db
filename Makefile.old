# v1.6.1    2016-06-20     webmaster@highskillz.com
TAG_VERSION=200211c

# .ONESHELL:
.SHELLFLAGS = -e


IMAGE_NAME=ez123/ops-toolbox-cli-db
#TAG_VERSION=160715

THIS_DIR := $(dir $(abspath $(lastword $(MAKEFILE_LIST))))
TIMESTAMP=$(shell date -u +"%Y%m%d_%H%M%S%Z")

BUILD_OPTS=--pull --force-rm
#BUILD_OPTS=--force-rm

# --------------------------------------------------------------------------
default: build

# --------------------------------------------------------------------------
build: _DOCKER_BUILD_OPTS=$(BUILD_OPTS)
build: _build_image

rebuild: _DOCKER_BUILD_OPTS=--no-cache $(BUILD_OPTS)
rebuild: _build_image

_build_image: _check-env-base
	docker build $(_DOCKER_BUILD_OPTS) -t $(IMAGE_NAME):alpine-34   -f ./alpine/alpine-34.docker    ./alpine
	docker build $(_DOCKER_BUILD_OPTS) -t $(IMAGE_NAME):alpine-38   -f ./alpine/alpine-38.docker    ./alpine
	docker build $(_DOCKER_BUILD_OPTS) -t $(IMAGE_NAME):alpine-39   -f ./alpine/alpine-39.docker    ./alpine
	docker build $(_DOCKER_BUILD_OPTS) -t $(IMAGE_NAME):alpine-310  -f ./alpine/alpine-310.docker   ./alpine
	docker build $(_DOCKER_BUILD_OPTS) -t $(IMAGE_NAME):alpine-311  -f ./alpine/alpine-311.docker   ./alpine
	docker build $(_DOCKER_BUILD_OPTS) -t $(IMAGE_NAME):alpine-edge -f ./alpine/alpine-edge.docker  ./alpine
	docker build $(_DOCKER_BUILD_OPTS) -t $(IMAGE_NAME):ubuntu-1604 -f ./ubuntu/ubuntu-1604.docker  ./ubuntu

# --------------------------------------------------------------------------
_check-env-base:
	test -n "$(TIMESTAMP)"
	#test -n "$(TAG_NAME)"

# --------------------------------------------------------------------------
shell: shell-ubuntu

shell-ubuntu: _check-env-base
	docker run --rm -it $(IMAGE_NAME):ubuntu bash

shell-alpine: _check-env-base
	docker run --rm -it $(IMAGE_NAME):alpine bash

# --------------------------------------------------------------------------
rmi: _check-env-base
	docker rmi $(IMAGE_NAME):alpine
	docker rmi $(IMAGE_NAME):ubuntu

# --------------------------------------------------------------------------
clean-junk:
	docker rm -v     `docker ps -aq -f status=exited`      || true
	docker rmi       `docker images -q -f dangling=true`   || true
	#docker volume rm `docker volume ls -qf dangling=true | grep -v "ansible_" | grep -v "^infra" |grep -v "state" |grep -v "persist" |grep -v "vol_"`  || true

# clean-images:
# 	docker rmi $(DH_ID_base):alpine  $(DH_ID):alpine   || true
# 	docker rmi $(DH_ID_base):ubuntu  $(DH_ID):ubuntu   || true
#

# --------------------------------------------------------------------------
list:
	docker images
	docker volume ls
	docker ps -a
